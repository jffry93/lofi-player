{"version":3,"sources":["components/Song.js","components/Player.js","components/Nav.js","components/LibrarySong.js","components/Library.js","components/DarkMode.js","lofiPlaylist.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","track","artist","Player","songs","setSongs","setCurrentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","volumeLvl","setVolumeLvl","useEffect","current","volume","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","skipTrackHandler","direction","a","currentIndex","findIndex","length","play","getTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","volumeAnim","currentTime","style","background","color","min","max","duration","value","type","onChange","e","target","size","icon","faVolumeOff","faVolumeUp","onClick","faAngleLeft","pause","faPause","faPlay","faAngleRight","Nav","libraryStatus","setLibraryStatus","darkMode","setDarkMode","faMusic","LibrarySong","songSelectHandler","Library","DarkMode","mainContainer","document","body","undefined","localStorage","LightTheme","backgroundImage","classList","remove","add","updateStorage","setItem","console","log","faSun","faMoon","lofiPlaylist","uuidv4","audio","App","adjustViewport","vh","window","innerHeight","documentElement","setProperty","addEventListener","useRef","useState","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","ref","onTimeUpdate","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.226a8fdc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className='song-container'>\n      <div className='img-container'>\n        <img src={currentSong.cover} alt={currentSong.name}></img>\n      </div>\n      <h2>{currentSong.track}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import { useEffect } from 'react';\n\n//FONT AWESOME\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n  faVolumeOff,\n  faVolumeUp,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst Player = ({\n  songs,\n  setSongs,\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  volumeLvl,\n  setVolumeLvl,\n}) => {\n  useEffect(() => {\n    audioRef.current.volume = volumeLvl;\n  });\n\n  //Event Handlers\n  //This function is used to Play currentSong selected\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  //FUNCTION TO AVOID USING USEEFFECT\n  const activeLibraryHandler = (nextPrev) => {\n    const newSongs = songs.map((song) => {\n      if (song.id === nextPrev.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  };\n\n  //Skip and reverse to track Event Handler\n  const skipTrackHandler = async (direction) => {\n    //goes to state holding playlist object and determines where in the array current song is\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    //console.log(currentIndex);\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]); //If index reaches song.length it makes value 0\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === 'skip-back') {\n      //check to see if the index is negative\n      if ((currentIndex - 1) % songs.length === -1) {\n        //if index is -1 set index to last index\n        await setCurrentSong(songs[songs.length - 1]);\n        activeLibraryHandler(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      //If index is Not -1 then subtract 1\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  //The function is used to convert the duration value into time\n  //Ex. 100seconds = 1min and 40seconds || 1:40\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  //Must add onChange handler to avoid input error\n  //When there is a change made to the audio bar input tag the songInfo state updates the currentTime\n  const dragHandler = (e) => {\n    //gets currentTime from audio tag in App.js\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  //Adjust Volume handler\n  const volumeHandler = (e) => {\n    audioRef.current.volume = e.target.value / 10;\n    setVolumeLvl(audioRef.current.volume);\n  };\n\n  //ADD ANIMATION STYLE FOR SONG TIME INPUT\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  //ADD ANIMATION STYLE FOR VOLUME\n  const volumeAnim = {\n    transform: `translateX(${volumeLvl * 100}%)`,\n  };\n\n  return (\n    <div className='player'>\n      <div className='time-control'>\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n          className='track'\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            type='range'\n            onChange={dragHandler}\n          />\n          <div style={trackAnim} className='animate-track'></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\n      </div>\n      <div className='volume-control'>\n        <div className='volume-down'>\n          <FontAwesomeIcon size='2x' icon={faVolumeOff} />\n        </div>\n        <div\n          className='track'\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\n          }}\n        >\n          <input min={0} max={10} type='range' onChange={volumeHandler} />\n          <div style={volumeAnim} className='animate-track'></div>\n        </div>\n        <div>\n          <FontAwesomeIcon size='2x' icon={faVolumeUp} />\n        </div>\n      </div>\n      <div className='play-control'>\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler('skip-back')}\n          className='skip-left'\n          icon={faAngleLeft}\n          size='2x'\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className='play'\n          icon={isPlaying ? faPause : faPlay}\n          size='2x'\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler('skip-forward')}\n          className='skip-forward'\n          icon={faAngleRight}\n          size='2x'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","//STYLING\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\n\nconst Nav = ({ libraryStatus, setLibraryStatus, darkMode, setDarkMode }) => {\n  return (\n    <nav>\n      <h1>Vibez</h1>\n      <button\n        onClick={() => setLibraryStatus(!libraryStatus)}\n        className={libraryStatus ? 'active-library' : ''}\n      >\n        {libraryStatus ? 'Player' : 'Library'}\n        <div>\n          <FontAwesomeIcon icon={faMusic} />\n        </div>\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","const LibrarySong = ({\n  song, //individual song\n  songs, //all songs\n  setSongs,\n  id, //song.id\n  currentSong,\n  setCurrentSong, //song currently selected\n  audioRef, //audio tag of song playing\n  isPlaying, //if song is playing\n}) => {\n  //Event Handler\n  //makes song clicked in the library the current song\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    //Add active State\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n\n    setSongs(newSongs);\n    //check if the song is playing and continues if true\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? 'selected' : ''}`}\n      //Used to highlight current song in library\n      style={{\n        background: `${\n          song.active\n            ? `linear-gradient(to left, ${currentSong.color[0]}, ${currentSong.color[1]})`\n            : ''\n        }`,\n      }}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className='song-description'>\n        <h3>{song.track}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import LibrarySong from './LibrarySong';\n\nconst Library = ({\n  songs,\n  currentSong,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n      <div className='library-title'>\n        <h2>Library</h2>\n      </div>\n      <div className='library-songs'>\n        {/* Use map() to sort through playlist object and create a library song component for each idex */}\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            currentSong={currentSong}\n            setCurrentSong={setCurrentSong}\n            song={song}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import { useEffect } from 'react';\n//FONT AWESOME STYLING\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\n\nconst DarkMode = ({ darkMode, setDarkMode, currentSong }) => {\n  //On Component load the localStorage adds darkMode state as value\n  useEffect(() => {\n    const mainContainer = document.body;\n    //Takes the value saved in local storage and makes it the state\n    if (darkMode === undefined) {\n      setDarkMode(localStorage.LightTheme);\n      // mainContainer.classList.add('dark-mode-active');\n      mainContainer.style.backgroundImage = `linear-gradient(180deg, ${currentSong.color[0]}, ${currentSong.color[1]})`;\n    }\n    //Set initial values based on local storage value\n    if (localStorage.LightTheme === 'light-mode') {\n      setDarkMode(false);\n      mainContainer.classList.remove('dark-mode-active');\n      mainContainer.style.backgroundImage = `linear-gradient(180deg, ${currentSong.color[0]}, ${currentSong.color[1]})`;\n    }\n    if (localStorage.LightTheme === 'dark-mode') {\n      setDarkMode(true);\n      mainContainer.classList.add('dark-mode-active');\n      mainContainer.style.backgroundImage = 'linear-gradient(#181818, #242424)';\n    } else {\n    }\n  });\n\n  const updateStorage = () => {\n    //If there is no LightTheme value in localStorage\n    if (darkMode === undefined) {\n      localStorage.setItem('LightTheme', 'dark-mode');\n      setDarkMode(true);\n      console.log(localStorage);\n    }\n    if (darkMode === true) {\n      localStorage.setItem('LightTheme', 'light-mode');\n      setDarkMode(false);\n      console.log(localStorage);\n    }\n    if (darkMode === false) {\n      localStorage.setItem('LightTheme', 'dark-mode');\n      setDarkMode(true);\n      console.log(localStorage);\n    }\n  };\n\n  return (\n    <div className={`dark-mode-container ${darkMode ? 'moon' : 'sun'}`}>\n      <FontAwesomeIcon onClick={() => updateStorage()} icon={faSun} size='2x' />\n      <FontAwesomeIcon onClick={() => updateStorage()} icon={faMoon} />\n    </div>\n  );\n};\n\nexport default DarkMode;\n","import { v4 as uuidv4 } from 'uuid';\n\nfunction lofiPlaylist() {\n  return [\n    {\n      track: 'Cruising',\n      artist: 'Evil Needle',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/04/cb0cc6270d7f2e1bb13e44e8832bd5c9b2a61080-300x300.jpg',\n      id: uuidv4(),\n      active: true,\n      color: ['#d35b2b', '#554b50'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=17087',\n    },\n    {\n      track: 'Lonely Waves',\n      artist: 'C Y G N',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/02/80be32197ca7971424bef5e4d0c6810e1d4334c6-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#d32bc5', '#140f50'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=14981',\n    },\n    {\n      track: 'Cabaña',\n      artist: 'Juan Rios',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/07/4163ebb931e06d4ee8eb184295c0246d4a5055f7-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#74366B', '#ff9278'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=21647',\n    },\n    {\n      track: 'Bell Tower',\n      artist: 'Mama Aiuto',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/07/23e723de689a7b1253f600fc21de954300043ce3-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#d67740', '#518ccf'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=21734',\n    },\n    {\n      track: 'travelbag',\n      artist: 'mommy, Sleepy Fish',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/05/1245c0271290a3196328c0cf4aaa910cd873dfe7-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#4086d6', '#383229'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=19058',\n    },\n    {\n      track: 'Conflicted',\n      artist: 'Hanz',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/08/b0bb2309d0c8fe0a32907ecddab689501b7de5cf-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#434E61', '#7DA7E8'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=24642',\n    },\n    {\n      track: 'Where The Sun Goes',\n      artist: 'Delayde, anybodyy',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/09/6a9ef8ac00e168d3308fdf9e336874c03fab829d-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#82CDF3', '#794BCC'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=23188',\n    },\n    {\n      track: 'Vitamin D',\n      artist: 'fantompower',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/07/3b73a510169f14c4af83ac4016e809917412702b-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#E0BBDC', '#C7D8DF'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=22790',\n    },\n    {\n      track: 'Snaring River',\n      artist: 'Moods',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/09/1db4d2274604636097241aca0f7077594e95edc7-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#852525', '#0a3838'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=24694',\n    },\n    {\n      track: 'Hung Up',\n      artist: 'Ezzy',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/09/dc49d7971512be0192848d072efdaaab91a4c73c-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#da2d2d', '#e5c78f'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=24699',\n    },\n    {\n      track: 'Little Bird',\n      artist: 'Liphe',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/07/d7ef56edb58522994c46e2b02be3671b66a7e2bd-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#d45959', '#340c69'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=21735',\n    },\n    {\n      track: 'Viatecture',\n      artist: 'Leavv, Makzo',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/06/23b2ff959731b56ea8545828b462311e8b1a2bcc-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#bd829f', '#5eabdf'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=20119',\n    },\n    {\n      track: 'Memories Pt.1',\n      artist: 'Ruck P',\n      cover:\n        'https://chillhop.com/wp-content/uploads/2021/07/034f52eeaeceb144cca67b0930d705d32fc39e37-300x300.jpg',\n      id: uuidv4(),\n      active: false,\n      color: ['#2f168b', '#df5ea5'],\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=21659',\n    },\n  ];\n}\n\nexport default lofiPlaylist;\n","import { useState, useEffect, useRef } from 'react';\n//COMPONENTS\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport Nav from './components/Nav';\nimport Library from './components/Library';\nimport DarkMode from './components/DarkMode';\n//STYLING\nimport './styles/app.scss';\n\n//SONG DATA\nimport lofiPlaylist from './lofiPlaylist';\n\nfunction App() {\n  //New Viewport hieght\n  const adjustViewport = () => {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n    console.log(vh);\n  };\n  useEffect(() => {\n    adjustViewport();\n  }, []);\n  window.addEventListener('resize', () => {\n    // We execute the same script as before\n    adjustViewport();\n  });\n\n  //useRef() Hook\n  const audioRef = useRef(undefined);\n  //STATE\n  //This State is used to hold playlist data\n  const [songs, setSongs] = useState(lofiPlaylist());\n  //This State is used to show which song is selected\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  //This State determines if the song selected is playing\n  const [isPlaying, setIsPlaying] = useState(false);\n  //Information of song Selected\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  //Determines if Library should be open or not\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  //DarkMode toggle\n  const [darkMode, setDarkMode] = useState();\n  //Volume\n  const [volumeLvl, setVolumeLvl] = useState(0.3);\n\n  //EVENT HANDLER\n  //Adds values to setSongInfo state\n  const timeUpdateHandler = (e) => {\n    //Get Values from audio tag when it starts playing\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //Round numbers to hundredths from millionths\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    //Used to determine place in song bar\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  //Starts next song when the song ends\n  const songEndHandler = async (e) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div\n      className={`App ${libraryStatus ? 'library-active' : ''}\n    `}\n    >\n      {/* Navbar is to the left. When library Status state becomes true it move the library to the center and goes back when false*/}\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n        darkMode={darkMode}\n        setDarkMode={setDarkMode}\n      />\n      <div className='player-container'>\n        <Song currentSong={currentSong} />\n        <Player\n          songs={songs}\n          setSongs={setSongs}\n          currentSong={currentSong}\n          setCurrentSong={setCurrentSong}\n          isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          audioRef={audioRef}\n          songInfo={songInfo}\n          setSongInfo={setSongInfo}\n          volumeLvl={volumeLvl}\n          setVolumeLvl={setVolumeLvl}\n        />\n        <DarkMode\n          darkMode={darkMode}\n          setDarkMode={setDarkMode}\n          currentSong={currentSong}\n        />\n      </div>\n\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n\n      <audio\n        ref={audioRef}\n        src={currentSong.audio}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}